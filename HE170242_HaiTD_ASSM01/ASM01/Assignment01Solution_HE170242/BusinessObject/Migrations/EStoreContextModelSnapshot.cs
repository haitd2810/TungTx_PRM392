// <auto-generated />
using System;
using BusinessObject;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BusinessObject.Migrations
{
    [DbContext(typeof(EStoreContext))]
    partial class EStoreContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.36")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BusinessObject.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"), 1L, 1);

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryName = "Thuc an"
                        },
                        new
                        {
                            CategoryId = 2,
                            CategoryName = "vong co"
                        },
                        new
                        {
                            CategoryId = 3,
                            CategoryName = "do choi"
                        },
                        new
                        {
                            CategoryId = 4,
                            CategoryName = "quan ao"
                        });
                });

            modelBuilder.Entity("BusinessObject.Member", b =>
                {
                    b.Property<int>("MemberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MemberId"), 1L, 1);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Passsword")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("MemberId");

                    b.ToTable("Members");

                    b.HasData(
                        new
                        {
                            MemberId = 1,
                            City = "Ha Noi",
                            CompanyName = "FSoft",
                            Country = "Vietnam",
                            Email = "test1@gmail.com",
                            Passsword = "123456"
                        },
                        new
                        {
                            MemberId = 2,
                            City = "Hue",
                            CompanyName = "FA",
                            Country = "Vietnam",
                            Email = "test2@gmail.com",
                            Passsword = "123456"
                        },
                        new
                        {
                            MemberId = 3,
                            City = "Da nang",
                            CompanyName = "TPBank",
                            Country = "Vietnam",
                            Email = "test3@gmail.com",
                            Passsword = "123456"
                        },
                        new
                        {
                            MemberId = 4,
                            City = "HCM",
                            CompanyName = "VPBank",
                            Country = "Vietnam",
                            Email = "test4@gmail.com",
                            Passsword = "123456"
                        });
                });

            modelBuilder.Entity("BusinessObject.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"), 1L, 1);

                    b.Property<decimal>("Freight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("RequiredDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ShippedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("OrderId");

                    b.HasIndex("MemberId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            OrderId = 1,
                            Freight = 50000m,
                            MemberId = 1,
                            OrderDate = new DateTime(2025, 2, 11, 1, 25, 28, 328, DateTimeKind.Local).AddTicks(2470),
                            RequiredDate = new DateTime(2025, 2, 16, 1, 25, 28, 328, DateTimeKind.Local).AddTicks(2478),
                            ShippedDate = new DateTime(2025, 2, 13, 1, 25, 28, 328, DateTimeKind.Local).AddTicks(2483)
                        },
                        new
                        {
                            OrderId = 2,
                            Freight = 45000m,
                            MemberId = 2,
                            OrderDate = new DateTime(2025, 2, 11, 1, 25, 28, 328, DateTimeKind.Local).AddTicks(2484),
                            RequiredDate = new DateTime(2025, 2, 15, 1, 25, 28, 328, DateTimeKind.Local).AddTicks(2485),
                            ShippedDate = new DateTime(2025, 2, 12, 1, 25, 28, 328, DateTimeKind.Local).AddTicks(2485)
                        },
                        new
                        {
                            OrderId = 3,
                            Freight = 55000m,
                            MemberId = 3,
                            OrderDate = new DateTime(2025, 2, 11, 1, 25, 28, 328, DateTimeKind.Local).AddTicks(2486),
                            RequiredDate = new DateTime(2025, 2, 17, 1, 25, 28, 328, DateTimeKind.Local).AddTicks(2486),
                            ShippedDate = new DateTime(2025, 2, 14, 1, 25, 28, 328, DateTimeKind.Local).AddTicks(2487)
                        });
                });

            modelBuilder.Entity("BusinessObject.OrderDetails", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("OrderId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderDetails");

                    b.HasData(
                        new
                        {
                            OrderId = 1,
                            ProductId = 1,
                            Discount = 0m,
                            Quantity = 2,
                            UnitPrice = 150000m
                        },
                        new
                        {
                            OrderId = 1,
                            ProductId = 2,
                            Discount = 10m,
                            Quantity = 1,
                            UnitPrice = 300000m
                        },
                        new
                        {
                            OrderId = 2,
                            ProductId = 3,
                            Discount = 5m,
                            Quantity = 3,
                            UnitPrice = 100000m
                        },
                        new
                        {
                            OrderId = 3,
                            ProductId = 4,
                            Discount = 0m,
                            Quantity = 1,
                            UnitPrice = 200000m
                        },
                        new
                        {
                            OrderId = 3,
                            ProductId = 1,
                            Discount = 0m,
                            Quantity = 1,
                            UnitPrice = 150000m
                        });
                });

            modelBuilder.Entity("BusinessObject.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"), 1L, 1);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UnitInStock")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            CategoryId = 1,
                            ProductName = "Thức ăn cho chó",
                            UnitInStock = 50,
                            UnitPrice = 150000m,
                            Weight = 2.5m
                        },
                        new
                        {
                            ProductId = 2,
                            CategoryId = 2,
                            ProductName = "Vòng cổ thông minh",
                            UnitInStock = 30,
                            UnitPrice = 300000m,
                            Weight = 0.2m
                        },
                        new
                        {
                            ProductId = 3,
                            CategoryId = 3,
                            ProductName = "Bóng đồ chơi",
                            UnitInStock = 40,
                            UnitPrice = 100000m,
                            Weight = 0.5m
                        },
                        new
                        {
                            ProductId = 4,
                            CategoryId = 4,
                            ProductName = "Áo cho chó",
                            UnitInStock = 20,
                            UnitPrice = 200000m,
                            Weight = 0.3m
                        });
                });

            modelBuilder.Entity("BusinessObject.Order", b =>
                {
                    b.HasOne("BusinessObject.Member", "member")
                        .WithMany("Orders")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("member");
                });

            modelBuilder.Entity("BusinessObject.OrderDetails", b =>
                {
                    b.HasOne("BusinessObject.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusinessObject.Product", "Product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("BusinessObject.Product", b =>
                {
                    b.HasOne("BusinessObject.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("BusinessObject.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("BusinessObject.Member", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("BusinessObject.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("BusinessObject.Product", b =>
                {
                    b.Navigation("OrderDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
